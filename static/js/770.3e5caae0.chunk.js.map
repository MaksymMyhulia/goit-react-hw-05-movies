{"version":3,"file":"static/js/770.3e5caae0.chunk.js","mappings":"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","sources":["components/InfoMovie/InfoMovie.styled.js","components/InfoMovie/InfoMovie.js","components/PageList/PageList.styled.js","components/PageList/PageList.js","pages/DetailsMovie.js","services/fetchMovies.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\n\nconst LinkBack = styled(Link)`\n  text-decoration: none;\n  padding: 10px;\n  border-radius: ${({theme}) => theme.space[3]}px;\n  border: none;\n  box-shadow: ${({theme}) => theme.shadows.normal};\n  color: ${({theme}) => theme.colors.text};\n  background-color: ${({theme}) => theme.colors.backgroundColor};\n  font-size: ${({theme}) => theme.fontSizes.m};\n  &.active {\n    color: orange;\n  }\n`;\nexport default LinkBack;\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 20px;\n  font-size: 24px;\n`;","import { useLocation } from \"react-router-dom\";\nimport { useRef } from \"react\";\nimport  LinkBack  from \"./InfoMovie.styled\";\nimport { Container } from \"./InfoMovie.styled\";\nimport PropTypes from \"prop-types\";\n\n\nexport const InfoMovie = ({ title, genres, poster_path, release_date, vote_average, overview }) => {\n    const location = useLocation();\n    const backLinkRef = useRef(location.state?.from ?? '/');\n    return (\n      <Container>\n        <LinkBack to={backLinkRef.current}>{`<== Back`}</LinkBack>\n        <img src={poster_path && `https://image.tmdb.org/t/p/w400${poster_path}`} alt={title} />\n        <div>\n          <h1>\n            {title}({Number.parseInt(release_date)})\n          </h1>\n          <p>User score: {vote_average}</p>\n          <b>Overview</b>\n          <p>{overview}</p>\n          <b>Ganres</b>\n          <p>{genres && genres.map(elem => elem.name).join(', ')}</p>\n        </div>\n      </Container>\n    );\n  };\n\n  InfoMovie.propTypes = {\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  };","import styled from \"@emotion/styled\";\nimport { Link } from 'react-router-dom';\n\nconst LinkBack = styled(Link)`\n  color: black;\n  font-size: 20px;\n  text-decoration: none;\n  padding: 10px;\n  border: 1px dashed orange;\n  color: black;\n`;\nexport default LinkBack;\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 20px;\n  font-size: 24px;\n`;\n\nexport const ListSubInfo = styled.ul`\n  display: flex;\n  gap: 22px;\n  list-style: none;\n  padding: 20px 0;\n  margin: 0;\n`;\nexport const ContainerSub = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n`;","import { ContainerSub, ListSubInfo } from \"./PageList.styled\";\nimport StyledLink from \"components/Layout/Layout.styled\";\n\nexport const PageList = () => {\n    return (\n      <ContainerSub>\n        <h2>Additional information</h2>\n        <ListSubInfo>\n          <li>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </li>\n          <li>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </li>\n        </ListSubInfo>\n      </ContainerSub>\n    );\n  };","import { useState, useEffect } from \"react\";\nimport { fetchDetailsMovie } from \"services/fetchMovies\";\nimport { InfoMovie } from \"../components/InfoMovie/InfoMovie\";\nimport { useParams } from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport { Loader } from \"../components/Loader/Loader\";\nimport { PageList  } from \"../components/PageList/PageList\";\n\nconst DetailsMovie = () => {\n    const { movieId } = useParams();\n  \n    const [dataMovie, setDataMovie] = useState({});\n    const [status, setStatus] = useState('idle');\n    useEffect(() => {\n      getDetailsMovie(movieId);\n    }, [movieId]);\n  \n    async function getDetailsMovie(movieId) {\n      try {\n        setStatus('pending');\n        const data = await fetchDetailsMovie(movieId);\n        setDataMovie(data);\n        setStatus('responded');\n      } catch {\n        setStatus('rejected');\n      }\n    }\n  \n    const { title, overview, genres, poster_path, release_date, vote_average } = dataMovie;\n  \n    return (\n      <>\n        {status === 'responded' && (\n          <>\n            <InfoMovie\n              genres={genres}\n              title={title}\n              overview={overview}\n              vote_average={vote_average}\n              poster_path={poster_path}\n              release_date={release_date}\n            />\n            <PageList />\n          </>\n        )}\n        {status === 'pending' && <Loader />}\n        {status === 'rejected' && <h2>Sorry we didn't find this page</h2>}\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </>\n    );\n  };\n  \n  export default DetailsMovie;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = \"80849c20aa63241eb028c4e7b7d0f3a8\";\n\nexport async function fetchTrendMovies() {\n    const responce = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n    return responce.data.results;\n}\nexport async function fetchQueryMovies(query) {\n    const responce = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    return responce.data.results;\n}  \nexport async function fetchCastMovie(movieId) {\n    const responce = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return responce.data.cast;\n}\nexport async function fetchReviewMovie(movieId) {\n    const responce = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n    return responce.data.results;\n}\nexport async function fetchDetailsMovie(movieId) {\n    const responce = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US&external_source=imdb_id`\n    );\n    return responce.data;\n}"],"names":["styled","Link","theme","space","shadows","normal","colors","text","backgroundColor","fontSizes","m","Container","InfoMovie","title","genres","poster_path","release_date","vote_average","overview","location","useLocation","backLinkRef","useRef","state","from","to","current","src","alt","Number","parseInt","map","elem","name","join","ListSubInfo","ContainerSub","PageList","movieId","useParams","useState","dataMovie","setDataMovie","status","setStatus","fetchDetailsMovie","data","useEffect","getDetailsMovie","Loader","Suspense","fallback","axios","API_KEY","fetchTrendMovies","responce","results","fetchQueryMovies","query","fetchCastMovie","cast","fetchReviewMovie"],"sourceRoot":""}