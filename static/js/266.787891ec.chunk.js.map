{"version":3,"file":"static/js/266.787891ec.chunk.js","mappings":"wMAKaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,OAASL,EAAMM,QAFjBN,EAAME,GADA,KAStB,C,0HCkBH,UA9Ba,WACb,OAA4BK,EAAAA,EAAAA,UAAS,MAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAA4BD,EAAAA,EAAAA,UAAS,QAArC,eAAOE,EAAP,KAAeC,EAAf,KAFmB,wCASnB,oGAEMA,EAAU,WAFhB,UAGyBC,EAAAA,EAAAA,MAHzB,OAGYC,EAHZ,OAIMJ,EAAUI,GACVF,EAAU,aALhB,gDAOMA,EAAU,YAPhB,0DATmB,sBAoBnB,OAhBAG,EAAAA,EAAAA,YAAU,YAJS,mCAKjBC,EACD,GAAE,KAeC,iCACC,sDACa,YAAXL,IAAwB,SAAC,IAAD,IACb,cAAXA,IAA0B,SAAC,IAAD,CAAYb,OAAQA,IACnC,aAAXa,IAAyB,6DAG/B,C,mMChCDM,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeL,IAAtB,4CAAO,OAAP,oBAAO,oGACoBI,EAAAA,EAAAA,IAAA,mCAAsCC,IAD1D,cACGC,EADH,yBAEIA,EAASL,KAAKM,SAFlB,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACoBL,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DI,IAFlF,cACGH,EADH,yBAIIA,EAASL,KAAKM,SAJlB,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACoBP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,4BAA8CN,EAA9C,oBADpB,cACGC,EADH,yBAEIA,EAASL,KAAKW,MAFlB,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,uFACoBP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,4BAA8CN,EAA9C,oBADpB,cACGC,EADH,yBAEIA,EAASL,KAAKM,SAFlB,kEAIA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,uFACoBP,EAAAA,EAAAA,IAAA,gBACZO,EADY,oBACON,EADP,4CADpB,cACGC,EADH,yBAIIA,EAASL,MAJb,kE","sources":["components/MoviesList/MoviesList.js","pages/Home.js","services/fetchMovies.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\"; \nimport PropTypes from \"prop-types\";\n\n\nexport const MoviesList = ({ movies }) => {\n    const location = useLocation();\n    return (\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title || movie.name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n}","import { useEffect, useState } from \"react\";\nimport { fetchTrendMovies } from \"services/fetchMovies\";\nimport { MoviesList } from \"../components/MoviesList/MoviesList\"\nimport { Loader } from \"../components/Loader/Loader\";\n\n\nconst Home = () => {\nconst [movies, setMovies] = useState(null);\nconst [status, setStatus] = useState('idle');\n\nuseEffect(() => {\n  getTrendMovies();\n}, []);\n\n\nasync function getTrendMovies() {\n    try {\n      setStatus('pending');\n      const data = await fetchTrendMovies();\n      setMovies(data);\n      setStatus('responded');\n    } catch {\n      setStatus('rejected');\n    }\n  }\n\nreturn (\n    <>\n     <h1>Movies are trending today</h1>\n      {status === 'pending' && <Loader />}\n      {status === 'responded' && <MoviesList movies={movies} />}\n      {status === 'rejected' && <h2>Sorry we didn't find this page</h2>}\n    </>\n   );    \n}  \n\nexport default Home;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = \"80849c20aa63241eb028c4e7b7d0f3a8\";\n\nexport async function fetchTrendMovies() {\n    const responce = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n    return responce.data.results;\n}\nexport async function fetchQueryMovies(query) {\n    const responce = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    return responce.data.results;\n}  \nexport async function fetchCastMovie(movieId) {\n    const responce = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return responce.data.cast;\n}\nexport async function fetchReviewMovie(movieId) {\n    const responce = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n    return responce.data.results;\n}\nexport async function fetchDetailsMovie(movieId) {\n    const responce = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US&external_source=imdb_id`\n    );\n    return responce.data;\n}"],"names":["MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","name","useState","setMovies","status","setStatus","fetchTrendMovies","data","useEffect","getTrendMovies","axios","API_KEY","responce","results","fetchQueryMovies","query","fetchCastMovie","movieId","cast","fetchReviewMovie","fetchDetailsMovie"],"sourceRoot":""}