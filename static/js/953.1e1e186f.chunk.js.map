{"version":3,"file":"static/js/953.1e1e186f.chunk.js","mappings":"kRAEaA,E,QAAaC,EAAAA,GAAH,4C,SCkDrB,EA7Ca,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA8BP,GAA9B,uFAEIM,EAAU,WAFd,UAGuBE,EAAAA,EAAAA,IAAiBR,GAHxC,OAGUS,EAHV,OAIIL,EAAUK,GACVH,EAAU,aALd,gDAOIA,EAAU,YAPd,yDADc,yBAAC,SAAD,2BAWdI,CAAeV,EAChB,GAAE,CAACA,KAGF,gCACc,cAAXK,GAA4C,IAAlBF,EAAOQ,QAChC,4DAEA,SAACb,EAAD,UACGK,EAAOS,KAAI,YAA0D,IAAvDC,EAAsD,EAAtDA,OAAQC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,GAAsBC,EAAe,EAAjCC,eAAkBD,OACpD,OACE,yBAEI,iCACE,uBAAIH,KACJ,oCAAYG,GAAkB,qCAC9B,uBAAIF,QALDC,EAUZ,MAGO,YAAXV,IAAwB,SAACa,EAAA,EAAD,IACb,aAAXb,IAAyB,6DAG/B,C,mMCjDHc,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBF,EAAAA,EAAAA,IAAA,mCAAsCC,IAD1D,cACGE,EADH,yBAEIA,EAASb,KAAKc,SAFlB,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACoBN,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DK,IAFlF,cACGH,EADH,yBAIIA,EAASb,KAAKc,SAJlB,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8B1B,GAA9B,uFACoBmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,4BAA8CoB,EAA9C,oBADpB,cACGE,EADH,yBAEIA,EAASb,KAAKkB,MAFlB,kEAIA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCR,GAAhC,uFACoBmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,4BAA8CoB,EAA9C,oBADpB,cACGE,EADH,yBAEIA,EAASb,KAAKc,SAFlB,kEAIA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiC5B,GAAjC,uFACoBmB,EAAAA,EAAAA,IAAA,gBACZnB,EADY,oBACOoB,EADP,4CADpB,cACGE,EADH,yBAIIA,EAASb,MAJb,kE","sources":["components/Review/Review.styled.js","components/Review/Review.js","services/fetchMovies.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const ListReview = styled.ul`\n  padding: 30px 0;\n`;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchReviewMovie } from \"services/fetchMovies\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { ListReview } from \"./Review.styled\";\n\n\nconst Review = () => {\n    const { movieId } = useParams();\n    const [review, setReview] = useState([]);\n    const [status, setStatus] = useState('idle');\n  \n    useEffect(() => {\n      async function getReviewMovie(movieId) {\n        try {\n          setStatus('pending');\n          const data = await fetchReviewMovie(movieId);\n          setReview(data);\n          setStatus('responded');\n        } catch {\n          setStatus('rejected');\n        }\n      }\n      getReviewMovie(movieId);\n    }, [movieId]);\n  \n    return (\n      <>\n        {status === 'responded' && review.length === 0 ? (\n          <h2>There are currently no reviews</h2>\n        ) : (\n          <ListReview>\n            {review.map(({ author, content, id, author_details: { rating } }) => {\n              return (\n                <li key={id}>\n                  {\n                    <>\n                      <b>{author}</b>\n                      <p>Rating: {rating ? rating : 'There are currently no ratings'}</p>\n                      <p>{content}</p>\n                    </>\n                  }\n                </li>\n              );\n            })}\n          </ListReview>\n        )}\n        {status === 'pending' && <Loader />}\n        {status === 'rejected' && <h2>Sorry we didn't find this page</h2>}\n      </>\n    );\n  };\n  export default Review;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = \"80849c20aa63241eb028c4e7b7d0f3a8\";\n\nexport async function fetchTrendMovies() {\n    const responce = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n    return responce.data.results;\n}\nexport async function fetchQueryMovies(query) {\n    const responce = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    return responce.data.results;\n}  \nexport async function fetchCastMovie(movieId) {\n    const responce = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return responce.data.cast;\n}\nexport async function fetchReviewMovie(movieId) {\n    const responce = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n    return responce.data.results;\n}\nexport async function fetchDetailsMovie(movieId) {\n    const responce = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US&external_source=imdb_id`\n    );\n    return responce.data;\n}"],"names":["ListReview","styled","movieId","useParams","useState","review","setReview","status","setStatus","useEffect","fetchReviewMovie","data","getReviewMovie","length","map","author","content","id","rating","author_details","Loader","axios","API_KEY","fetchTrendMovies","responce","results","fetchQueryMovies","query","fetchCastMovie","cast","fetchDetailsMovie"],"sourceRoot":""}